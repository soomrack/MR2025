#include <cstdio> 

typedef int RUB;

const double INFLATION_RATE = 1.05; // 5% ежегодной инфляции - нужно еще прописать инфляцию

int apart_price = 20 * 1000 * 1000; //начальная цена на квартиру

const double INDEXICATION_RATE = 1.07;



struct Person {
public:
    RUB bank_account;
    RUB income;
    RUB food;
    RUB clothes;
    RUB rent;
    RUB mortgage;

    // Траты на еду
    void spend_on_food(int month) {
        if (month == 10) {
            food *=  INFLATION_RATE;  // Инфляция 5%
    }
        bank_account -= food;
    }


    //Траты на одежду
    void spend_on_clothes() {
        bank_account -= clothes;
    }

};


Person alice;
Person bob;


// Инициализация Алисы
void alice_init() {
    alice.bank_account = 1000 * 1000;
    alice.income = 200 * 1000;
    alice.food = 30000;
    alice.clothes = 10000;
    alice.rent = 50000;
}


// Инициализация Боба
void bob_init() {
    bob.bank_account = 2000 * 1000;
    bob.income = 150 * 1000;
    bob.food = 25000;
    bob.clothes = 20000;
    bob.mortgage = 100 * 1000;
}


// Начисление доходов с учётом индексации и премий у Алисы
void alice_add_income(int year, const int month) {
    if (month == 10) {
        alice.income = static_cast<RUB>(alice.income * INDEXICATION_RATE);  // Индексация на 7%
    }
    if (year == 2030 && month == 3) {
         alice.income = static_cast<RUB>(alice.income * 1.5);   // Повышение
    }
    alice.bank_account += alice.income;
}


// Начисление доходов с учётом индексации и премий у Боба
void bob_add_income(int year, const int month) {
    if (month == 10) {
        bob.income = static_cast<RUB>(bob.income * INDEXICATION_RATE);  // Индексация на 7%
    }
    if (year == 2030 && month == 3) {
         bob.income = static_cast<RUB>(bob.income * 2);   // Повышение
    }
    bob.bank_account += bob.income;
}


// Выплаты ипотеки
void pay_mortgage() {
    bob.bank_account -= bob.mortgage;
}


// // Покупка квартиры
// void buying_apart(){
//     if (bank_account >= apart_price){
//         bank_account -= apart_price;
//     }        

// }


void rent(){
    alice.bank_account-=alice.rent;
}


//void divorce()
//void reprice_apart - увеличение цены на квартиру



void simulate() {
    int year = 2025;
    int month = 9;

    while (!(year == 2045 && month == 9)) {

        alice_add_income(year, month);
        alice.spend_on_food(month);
        alice.spend_on_clothes();
        rent(); //Алиса платит аренду, пока не купит квартиру
        
        // alice_buying_apart();




        bob_add_income(year, month);
        bob.spend_on_food(month);
        pay_mortgage();  // Боб платит ипотеку каждый месяц



        ++month;
        if (month == 13) {
            month = 1;
            ++year;
        }
    }
}


void print_results() {
    printf("Alice capital = %d RUB\n", alice.bank_account);
    printf("Bob capital   = %d RUB\n", bob.bank_account);
}


int main() {

    alice_init();  
    bob_init();  

    simulate();

    print_results();

    return 0;
}
